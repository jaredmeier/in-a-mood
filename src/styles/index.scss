:root {
    --primary-1: whitesmoke;
    --border-1:  #586BA4;
    --secondary-1: salmon;
    --header-1: black;

    --primary-2: #90BAAD;
    --border-2: #717C89;
    --secondary-2: #ADF6B1;
    --header-2: white;

    --bg-color: var(--primary-1);
    --border-color: var(--border-1);
    --secondary-color: var(--secondary-1);
    --header-color: var(--header-1);
}

html, body {
    margin: 0;
    padding: 0;
}

* {
  box-sizing: border-box;
}

body {
    background-color: var(--bg-color);
    font-family: 'Merriweather', serif;
}

#root {
    height: 100vh;
    width: 65vw;
    margin: 0 auto;
    display: grid;
    // grid-template-rows: 130px 1fr 275px 50fr;
}

h1 {
    color: var(--header-color);
    margin: 0;
    font-size: 4em;
}

h2 {
    font-size: 2em;
}

h3 {
    font-size: 1.5em;
    margin: 20px 0 10px;
}

@keyframes titlecolor {
    0% { color: var(--header-color) }
    25% { color: #2c7bb6 }
    50% { color: #ffff8c; }
    75% { color: #d7191c; }
    100% { color: var(--header-color) }
}

.title.animate {
    animation-duration: 5s;
    animation-name: titlecolor;
}

.title {
    position: relative;
    width: 360px;
}

.header-container {
    display: flex;
    align-items: flex-end;
    border-bottom: 1px solid var(--border-color);
}

.header-links-container {
    margin-left: 20px;
    display: flex;
    font-size: 1em;
}

.header-links-container .header-link {
    padding: 0 10px;
    border-right: 1px solid var(--border-color);
    padding-bottom: 8px;
}

.header-links-container .header-link:last-of-type {
    border: 0;
}

.fa-question-circle {
    color: var(--secondary-color);
}

.color-container {
    margin-left: auto;
    justify-self: flex-end;
    padding-bottom: 4px;
}

.color-picker-dot {
    box-sizing: border-box;
    height: 15px;
    width: 15px;
    border: 2px solid var(--border-color);
    border-radius: 50%;
    display: inline-block;
    transition: transform 0.1s;
}

.color-picker-dot:hover {
    transition: transform 0.1s;
    transform: scale(1.1);
}

.color-picker-dot.c-one {
    background-color: var(--primary-1);
}

.color-picker-dot.c-two {
    background-color: var(--primary-2);
}

.refresh-mood {
    position: absolute;
    left: 75%;
    top: 40%;
    font-size: 4vw;
    display: flex;
    align-items: center;
    padding: 10px;
    transition: transform 0.1s;
}

.refresh-mood:hover {
    transition: transform 0.1s;
    transform: scale(1.1);
}

.refresh-icon {
    transform: rotate(0);
}

@keyframes refreshspinidle {
    0% { transform: rotate(0deg); }
    // 25% { transform: rotate(180deg); }
    33% { transform: rotate(360deg); }
    75% { transform: rotate(360deg); }  
    100% { transform: rotate(360deg); }
}

.refresh-icon.animate {
    animation-delay: 2s;
    animation-duration: 3s;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
    animation-name: refreshspinidle;
}

@keyframes refreshspinload {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.refresh-icon.animate-loading {
    animation-duration: 3s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    animation-name: refreshspinload;
}

.refresh-hand {
    position: absolute;
    left: 75%;
    top: 57%;
    font-size: 5vw;
    display: flex;
    align-items: center;
    padding: 10px;
    transform: translateY(0px);
}

@keyframes handbounce {
    0% { transform: translateY(0px); }
    15% { transform: translateY(-15px); }
    33% { transform: translateY(0px); }
    50% { transform: translateY(0px); }  
    100% { transform: translateY(0px); }
}

.refresh-hand.animate {
    animation-delay: 2s;
    animation-duration: 3s;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
    animation-name: handbounce;
}

[class^="mood-icon"] {
    filter: invert(0.5);
}

#chart-container {
    height: 100%;
    width: 100%;
}

.chart {
    height: 80%;
    width: 100%;
}

.tick {
    font-size: 1.6em;
}

.axis {
    font-family: inherit;
}

circle.dot {
    fill: var(--secondary-color);
    r: 3;
}

circle.dot-mag {
    fill: var(--secondary-color);
    r: 2;
}

#current-mood-container {
    position: relative;
    width: 100%;
    padding-top: 40px;
}

.moodring-svg {
    width: 100%;
}

.modal-background {
    position: fixed;
    top: 0;
    bottom: 0;
    right: 0;
    left: 0;
    background: rgba(0, 0, 0, 0.7);
    z-index: 10;
}

.modal-child {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.about-modal {
    min-width: 300px;
    max-width: 500px;
    max-height: 80vh;
    display: grid;
    grid-template-rows: 60px 1fr;
    grid-template-columns: 1fr 1fr;
    background-color: var(--bg-color);
    padding: 25px 25px 40px;
    border: 1px solid var(--border-color);
    border-radius: 3px;
    box-sizing: border-box;
    overflow-y: auto;
    color: var(--header-color);
}

.about-modal h2, .modal-text {
    grid-column: 1 / -1;
}

.about-modal h2 {
    grid-row: 1 / 2;
}

.about-modal .modal-text {
    grid-row: 2 / -1;
}

.about-modal p {
    line-height: 1.5em;
}

.about-modal p:last-of-type {
    padding-bottom: 40px;
}

.about-modal a {
  text-decoration: underline;
  color: var(--secondary-color);
}

.close-modal {
    grid-row: 1 / 2;
    grid-column: -1 / 2;
    justify-self: end;
    text-align: center;
    height: 30px;
    width: 30px;
    padding: 0;
    background-color: transparent;
    color: var(--header-color);
    font-size: 2em;
    border: 0;
}

.close-modal:hover {
    color: black;
    background-color: transparent;
    border: 0;
}

.hidden {
    display: none;
}
